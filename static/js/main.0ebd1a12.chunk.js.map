{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFields","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCIFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,mCAAML,EAAMG,QAAQG,KAApB,OACA,4BAAIN,EAAMG,QAAQI,YCHbC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAI,CAACV,UAGT,aADA,CACA,OAAKC,UAAU,YAAf,SAEQD,EAAMW,SAASC,KAAI,SAAAT,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCR1BS,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACId,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiDHG,G,wDAjDX,aAAe,IAAD,8BACV,gBAOJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CACVC,aAAcF,EAAEG,OAAOC,SAR3B,EAAKC,MAAQ,CACTb,SAAU,GACVU,aAAc,IAJR,E,qDAcd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CACzBT,SAAUkB,S,oBAItB,WAAU,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAUU,EADZ,EACYA,aACXU,EAAiBpB,EAASqB,QAAO,SAAA7B,GAAO,OAC1CA,EAAQG,KAAK2B,cAAcC,SAASb,EAAaY,kBAErD,OACI,mCACI,sBAAKhC,UAAU,MAAf,UACI,sDAQA,cAAC,EAAD,CACIc,aAAce,KAAKf,aACnBD,YAAY,mBAChB,cAAC,EAAD,CAAUH,SAAUoB,a,GA1CtBI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0ebd1a12.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './card.style.css'\r\n\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n        <h2> {props.monster.name} </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)\r\n","import React from 'react'\r\n\r\nimport './card-list.styles.css'\r\nimport {Card} from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n    console.log({props});\r\n    return (\r\n        // Children are what you pass in between the brackets of our component that get called\r\n        <div className=\"card-list\">\r\n            {\r\n                props.monsters.map(monster => (\r\n                    <Card key={monster.id} monster={monster}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className='search'\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}/>\r\n);\r\n\r\n// Functional component is just a component that gets some props and returns some HTML\r\n\r\n// Si no necesitamos el internal state o algun life cycle, usar functional component\r\n","import logo from './logo.svg';\nimport React, {Component} from 'react'\n\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport {SearchBox} from \"./components/search-box/search-box.component\";\n\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchFields: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            searchFields: e.target.value\n        })\n    }\n\n    componentDidMount() { // se renderiza en el DOM por la primera vez\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({\n                monsters: users\n            }))\n    }\n\n    render() {\n        const {monsters, searchFields} = this.state;\n        const filterMonsters = monsters.filter(monster =>\n            monster.name.toLowerCase().includes(searchFields.toLowerCase())\n        )\n        return (\n            <>\n                <div className=\"App\">\n                    <h1>Monsters Rolodex !!!</h1>\n                    {/*<input type=\"search\" placeholder=\"Search By Name\" onChange={$event => this.setState({ //  this is asyncronis*/}\n                    {/*    searchFields: $event.target.value*/}\n                    {/*})}/>*/}\n                    {/*\n                     this.handleChange() ---> se dispara con el render\n                     this.handleChange ---> se dispara solo si se hace click\n                     */}\n                    <SearchBox\n                        handleChange={this.handleChange}\n                        placeholder='Search by Name'/>\n                    <CardList monsters={filterMonsters}/>\n\n                </div>\n            </>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}